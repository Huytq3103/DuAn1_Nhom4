/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.poly.pro_1041.it17322.group4.view;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import com.poly.pro_1041.it17322.group4.config.EmailSender;
import com.poly.pro_1041.it17322.group4.domainmodel.Account;
import com.poly.pro_1041.it17322.group4.domainmodel.ChucVuAccount;
import com.poly.pro_1041.it17322.group4.domainmodel.TrangThaiAccount;
import com.poly.pro_1041.it17322.group4.response.ViewAccountReponse;
import com.poly.pro_1041.it17322.group4.service.ViewAccountService;
import com.poly.pro_1041.it17322.group4.service.impl.ViewAccountServiceImpl;
import com.sun.mail.imap.ACL;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.concurrent.Executor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.bytebuddy.utility.RandomString;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.concurrent.Executors;

/**
 *
 * @author DELL
 */
public class ViewAccount extends javax.swing.JPanel implements Runnable, ThreadFactory {

    /**
     * Creates new form ViewAccount
     */
    private ViewAccountService vaccsv = new ViewAccountServiceImpl();
    private DefaultTableModel model = new DefaultTableModel();
    private List<ViewAccountReponse> listVAcc = new ArrayList<>();
    private Account account = new Account();
    int index;
    private String randomPass;
    private Webcam webcam = null;
    private Thread t1;

    public ViewAccount(Account account) {
        this.account = account;
        initComponents();
        txtNgayTao.setEnabled(false);
        tblNhanVien.setModel(model);
        String[] header = {"STT", "Tên", "Ngày sinh", "SDT", "Email", "Ngày tạo", "Địa chỉ", "Chức vụ", "Giới tính", "Trạng thái"};
        model.setColumnIdentifiers(header);
        listVAcc = vaccsv.getAll();
        fillToTable(listVAcc);
        rdoNghi.setEnabled(false);
        initWebcam();

    }

    private void initWebcam() {
        WebcamPanel panel = null;
        Executor executor = Executors.newSingleThreadExecutor(this);
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0); //0 is default webcam
        if (webcam.close()) {
            webcam.setViewSize(size);
        }
        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);
        panelWebcam.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 140));
        executor.execute(this);
    }

    private void fillToTable(List<ViewAccountReponse> list) {
        model.setRowCount(0);
        int i = 1;
        for (ViewAccountReponse x : list) {
            model.addRow(x.toDataRow(i));
        }
    }

    private void fillToTableNhanVienAn(List<ViewAccountReponse> list) {
        model.setRowCount(0);
        int i = 1;
        for (ViewAccountReponse x : list) {
            if (x.getTta().getId() == 2) {
                model.addRow(x.toDataRow(i));
                i++;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSdt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtNgayTao = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        rdoDangLam = new javax.swing.JRadioButton();
        rdoNghi = new javax.swing.JRadioButton();
        cboChucVu = new javax.swing.JComboBox<>();
        dpNgaySinh = new com.toedter.calendar.JDateChooser();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        btnNghi = new javax.swing.JButton();
        btnHienThi = new javax.swing.JButton();
        btnDau = new javax.swing.JButton();
        btnTruoc = new javax.swing.JButton();
        btnSau = new javax.swing.JButton();
        btnCuoi = new javax.swing.JButton();
        btnXuatExcel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelWebcam = new javax.swing.JPanel();
        btnDong = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1074, 624));
        setPreferredSize(new java.awt.Dimension(1074, 624));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)))
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Quản lí nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel2.setText("Tên nhân viên");

        jLabel3.setText("Ngày sinh");

        jLabel4.setText("Số điện thoại");

        jLabel5.setText("Ngày tạo");

        jLabel6.setText("Email");

        jLabel7.setText("Địa chỉ");

        jLabel8.setText("Chức vụ");

        jLabel10.setText("Giới tính");

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel11.setText("Trạng thái");

        buttonGroup2.add(rdoDangLam);
        rdoDangLam.setSelected(true);
        rdoDangLam.setText("Đang làm");

        buttonGroup2.add(rdoNghi);
        rdoNghi.setText("Nghỉ");

        cboChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chủ", "Nhân Viên" }));

        dpNgaySinh.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dpNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoNam)
                        .addGap(18, 18, 18)
                        .addComponent(rdoNu)))
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboChucVu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdoDangLam)
                .addGap(18, 18, 18)
                .addComponent(rdoNghi)
                .addGap(140, 140, 140))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoDangLam)
                            .addComponent(rdoNghi))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, txtTen});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, rdoNam, rdoNu});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, rdoDangLam, rdoNghi});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboChucVu, jLabel8});

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnNghi.setText("Nghỉ");
        btnNghi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNghiActionPerformed(evt);
            }
        });

        btnHienThi.setText("Hiển thị các nhân viên đang nghỉ");
        btnHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiActionPerformed(evt);
            }
        });

        btnDau.setText("|<");
        btnDau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDauActionPerformed(evt);
            }
        });

        btnTruoc.setText("<<");
        btnTruoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTruocActionPerformed(evt);
            }
        });

        btnSau.setText(">>");
        btnSau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSauActionPerformed(evt);
            }
        });

        btnCuoi.setText(">|");
        btnCuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCuoiActionPerformed(evt);
            }
        });

        btnXuatExcel.setText("Xuất Excel");
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });

        panelWebcam.setMaximumSize(new java.awt.Dimension(180, 140));
        panelWebcam.setMinimumSize(new java.awt.Dimension(180, 140));
        panelWebcam.setPreferredSize(new java.awt.Dimension(180, 140));
        panelWebcam.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDong.setText("Đóng");
        btnDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDong)
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(panelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(panelWebcam, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnDong)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTruoc, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCuoi)
                .addGap(350, 350, 350))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(btnSua)
                        .addGap(70, 70, 70)
                        .addComponent(btnLamMoi)
                        .addGap(70, 70, 70)
                        .addComponent(btnNghi)
                        .addGap(63, 63, 63)
                        .addComponent(btnXuatExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHienThi))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLamMoi, btnNghi, btnSua, btnThem, btnXuatExcel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCuoi, btnDau, btnSau, btnTruoc});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTruoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSau, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNghi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHienThi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXuatExcel))
                .addGap(14, 14, 14))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCuoi, btnDau, btnSau, btnTruoc});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnNghi, btnXuatExcel});

        jPanel3.getAccessibleContext().setAccessibleName("Quản lí nhân viên");
    }// </editor-fold>//GEN-END:initComponents

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        fillLenForm();

    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void clearForm() {
        txtTen.setText(null);
        dpNgaySinh.setCalendar(null);
        txtSdt.setText(null);
        txtEmail.setText(null);
        txtNgayTao.setText(null);
        txtDiaChi.setText(null);
        cboChucVu.setSelectedIndex(0);
        txtTimKiem.setText(null);
        index = -1;
    }

    private void sendPass(String pass) {
        String email = txtEmail.getText();
        String message = "Your username: " + email + "\n"
                + "\nYour password is: " + pass;
        EmailSender sendpass = new EmailSender();
        sendpass.emailSender(email, "Shelby Company Password", message);
        JOptionPane.showMessageDialog(this, "Mật khẩu đã dc gửi đến email");

    }

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clearForm();
        listVAcc = vaccsv.getAll();
        fillToTable(listVAcc);
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        ViewAccountReponse viewacc = getFormData();
        RandomString randomStr = new RandomString(9, ThreadLocalRandom.current());
        randomPass = randomStr.nextString();
        if (viewacc == null) {
            return;
        }
        boolean isTrangThai = rdoDangLam.isSelected();
        int trangThai1;
        if (isTrangThai) {
            trangThai1 = 1;
        } else {
            JOptionPane.showMessageDialog(this, "Nhân viên mới phải trạng thái đang làm");
            return;
        }

        for (ViewAccountReponse x : listVAcc) {
            if (x.getEmail().equalsIgnoreCase(txtEmail.getText())) {
                JOptionPane.showMessageDialog(this, "Email đã tồn tại");
                return;
            }
        }

        for (ViewAccountReponse x : listVAcc) {
            if (x.getSdt().equalsIgnoreCase(txtSdt.getText())) {
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại");
                return;
            }
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String ngaySinh = sdf.format(dpNgaySinh.getDate());

        viewacc.setPassword(randomPass);
        viewacc.setNgaySinh(ngaySinh);
        viewacc.setNguoiTao(account.getId());
        String add = vaccsv.add(viewacc);
        JOptionPane.showMessageDialog(this, add);
        listVAcc = vaccsv.getAll();
        fillToTable(listVAcc);
        sendPass(randomPass);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        index = tblNhanVien.getSelectedRow();
        rdoNghi.setEnabled(false);
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Chọn 1 dòng để sửa!");
            return;
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String ngaySinh = sdf.format(dpNgaySinh.getDate());
        ViewAccountReponse viewacc = getFormData();
        ViewAccountReponse var = listVAcc.get(index);
        viewacc.setId(var.getId());
        viewacc.setNgaySinh(ngaySinh);
        viewacc.setNgayChinhSua(getDate());
        viewacc.setNguoiTao(var.getNguoiTao());
        viewacc.setNguoiChinhSua(account.getId());
        viewacc.setHoTen(txtTen.getText());
        viewacc.setSdt(txtSdt.getText());
        viewacc.setDiaChi(txtDiaChi.getText());
        if(cboChucVu.getSelectedIndex() == 0){
            viewacc.setCvac(new ChucVuAccount(1, null, null));
        }else{
            viewacc.setCvac(new ChucVuAccount(2, null, null));
        }

        String update = vaccsv.update(viewacc);
        JOptionPane.showMessageDialog(this, update);
        listVAcc = vaccsv.getAll();
        fillToTable(listVAcc);
        clearForm();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnNghiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNghiActionPerformed
        index = tblNhanVien.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Chọn nhân viên cho nghỉ!");
            return;
        }
//        String password = String.valueOf(randomPass);
//        if (viewacc.getPassword().equalsIgnoreCase((randomPass))) {
//            password = null;
//        }
        ViewAccountReponse viewAcc = listVAcc.get(index);
        viewAcc.setNguoiChinhSua(account.getId());
        viewAcc.setNgayChinhSua(getDate());
        viewAcc.setTta(new TrangThaiAccount(2, null, null));
        String update = vaccsv.update(viewAcc);
        JOptionPane.showMessageDialog(this, "Đã nghỉ!");
        listVAcc = vaccsv.getAll();
        fillToTable(listVAcc);
        clearForm();
    }//GEN-LAST:event_btnNghiActionPerformed

    private void btnHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiActionPerformed
        listVAcc = vaccsv.getAllAn();
        rdoNghi.setEnabled(true);
        fillToTableNhanVienAn(listVAcc);
        clearForm();
    }//GEN-LAST:event_btnHienThiActionPerformed

    private void btnDauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDauActionPerformed
        try {
            index = 0;
            tblNhanVien.setRowSelectionInterval(index, index);
            fillLenForm();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi di chuyển");
        }
    }//GEN-LAST:event_btnDauActionPerformed

    private void btnCuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCuoiActionPerformed
        try {
            index = listVAcc.size() - 1;
            tblNhanVien.setRowSelectionInterval(index, index);
            fillLenForm();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi di chuyển");
        }
    }//GEN-LAST:event_btnCuoiActionPerformed

    private void btnTruocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTruocActionPerformed
        try {
            if (index > 0) {
                index--;
            }
            tblNhanVien.setRowSelectionInterval(index, index);
            fillLenForm();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không di chuyển đc");
        }
    }//GEN-LAST:event_btnTruocActionPerformed

    private void btnSauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSauActionPerformed
        try {
            if (index < listVAcc.size() - 1) {
                index++;
            }
            tblNhanVien.setRowSelectionInterval(index, index);
            fillLenForm();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không di chuyển đc");
        }
    }//GEN-LAST:event_btnSauActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String search = txtTimKiem.getText();
        List<ViewAccountReponse> listSearch = vaccsv.searchByName(listVAcc, search);
        fillToTable(listSearch);
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet sheet = workbook.createSheet("Danh sách nhân viên");
            XSSFRow row = null;
            Cell cell = null;
            row = sheet.createRow(4);

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Tên");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Ngày Sinh");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("SDT");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Email");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Ngày Tạo");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Địa Chỉ");

            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Chức Vụ");

            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Giới Tính");

            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Trạng Thái");

            for (int i = 0; i < listVAcc.size(); i++) {
                row = sheet.createRow(5 + i);

                cell = row.createCell(0, CellType.STRING);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getHoTen());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getNgaySinh());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getSdt());

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getEmail());

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getNgayTao());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getDiaChi());

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getCvac().getTen().equalsIgnoreCase("C") ? "Chủ" : "Nhân viên");

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).isGioiTinh() == true ? "Nam" : "Nữ");

                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue(listVAcc.get(i).getTta().getTen().equalsIgnoreCase("Able") ? "Đang làm" : "Nghỉ");
            }

            File f = new File("C:\\Users\\Huy PC\\Desktop\\anhDS_NhanVien.xlsx");
            try {
                FileOutputStream fos = new FileOutputStream(f);
                workbook.write(fos);
                fos.close();
                JOptionPane.showMessageDialog(this, "Xuất file excel thành công!");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi xuất excel");
            }
        } catch (Exception e) {
            e.printStackTrace(System.out);
        }
    }//GEN-LAST:event_btnXuatExcelActionPerformed

    private void btnDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDongActionPerformed
        webcam.close();
    }//GEN-LAST:event_btnDongActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCuoi;
    private javax.swing.JButton btnDau;
    private javax.swing.JButton btnDong;
    private javax.swing.JButton btnHienThi;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnNghi;
    private javax.swing.JButton btnSau;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTruoc;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboChucVu;
    private com.toedter.calendar.JDateChooser dpNgaySinh;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelWebcam;
    private javax.swing.JRadioButton rdoDangLam;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNghi;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
private String getDate() {
        Date d = new Date();
        int day = d.getDate();
        int month = d.getMonth() + 1;
        int year = d.getYear() + 1900;
        String ngayTao = month + "/" + day + "/" + year;
        return ngayTao;
    }

    private ViewAccountReponse getFormData() {
        UUID id = null;
        String hoTen = txtTen.getText();
        String ngaySinh = dpNgaySinh.getDateFormatString();
        String sdt = txtSdt.getText();
        String email = txtEmail.getText();
        String diaChi = txtDiaChi.getText();
        String username = email;
        String password = String.valueOf(randomPass);
        Date d = new Date();
        int day = d.getDate();
        int month = d.getMonth() + 1;
        int year = d.getYear() + 1900;
        String ngayTao = month + "/" + day + "/" + year;
        if (hoTen.equals("") || ngaySinh.equals("") || sdt.equals("") || email.equals("") || ngayTao.equals("")
                || diaChi.equals("")) {
            JOptionPane.showMessageDialog(this, "Không được để trống!");
            return null;
        }

//        Calendar c1 = Calendar.getInstance();
//        Calendar c2 = Calendar.getInstance();
//        c1.setTime(java.sql.Date.valueOf(ngaySinh));
//        c2.setTime(java.sql.Date.valueOf(LocalDate.now().toString()));
//        long a = (c1.getTime().getTime()) / (24 * 3600 * 1000);
//        long b = (c2.getTime().getTime()) / (24 * 3600 * 1000);
//        if (a > b) {
//            JOptionPane.showMessageDialog(this, "Ngày Sinh không được lớn hơn ngày hiện tại");
//            return null;
//        }
        String patternsdt = "0\\d{9,10}";
        if (!this.txtSdt.getText().matches(patternsdt)) {
            JOptionPane.showMessageDialog(this, "SDT không đúng định dạng!");
            return null;
        }

        String dangEmail = "\\w+@\\w+\\.\\w+";
        if (!email.matches(dangEmail)) {
            JOptionPane.showMessageDialog(this, "Email không đúng định dạng!");
            return null;
        }

        boolean isGioiTinh = rdoNam.isSelected();
        boolean gioiTinh;
        if (isGioiTinh) {
            gioiTinh = true;
        } else {
            gioiTinh = false;
        }

        boolean isTrangThai = rdoDangLam.isSelected();
        int trangThai1;
        if (isTrangThai) {
            trangThai1 = 1;
        } else {
            trangThai1 = 2;
        }

        int chucVu = cboChucVu.getSelectedIndex() + 1;
        ChucVuAccount cvuacc = new ChucVuAccount(chucVu, null, null);
        TrangThaiAccount ttacc = new TrangThaiAccount(trangThai1, null, null);

        ViewAccountReponse viewacc = new ViewAccountReponse(cvuacc, ttacc, hoTen, ngaySinh, gioiTinh, sdt, diaChi, email, username, password, ngayTao, ngaySinh);
        return viewacc;
    }

    private void fillLenForm() {
        index = tblNhanVien.getSelectedRow();
        if (index == -1) {
            return;
        }
        ViewAccountReponse var = listVAcc.get(index);
        txtTen.setText(var.getHoTen());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(var.getNgaySinh());
            dpNgaySinh.setDate(date);
            System.out.println(date);
        } catch (Exception e) {
            e.printStackTrace();
        }
        txtSdt.setText(var.getSdt());
        txtEmail.setText(var.getEmail());
        txtNgayTao.setText(var.getNgayTao());
        txtDiaChi.setText(var.getDiaChi());
        if (tblNhanVien.getValueAt(index, 7).toString().equalsIgnoreCase("Chủ")) {
            cboChucVu.setSelectedIndex(0);
        } else {
            cboChucVu.setSelectedIndex(1);
        }
        if (tblNhanVien.getValueAt(index, 9).toString().equalsIgnoreCase("Đang làm")) {
            rdoDangLam.setSelected(true);
        } else {
            rdoNghi.setSelected(true);
        }

        if (tblNhanVien.getValueAt(index, 8).toString().equalsIgnoreCase("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        tblNhanVien.setRowSelectionInterval(index, index);
    }

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
//                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }
            try {
                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
                result = new MultiFormatReader().decode(bitmap);
            } catch (Exception e) {
            }
            if (result != null) {
                try {
                    List<String> listt = new ArrayList<>();
                    System.out.println(result);
                    String chuoiCCCd = result.toString();
                    if (chuoiCCCd.contains("||")) {
                        chuoiCCCd = chuoiCCCd.replace("||", " ");
                        chuoiCCCd = chuoiCCCd.replace("|", " ");
                        String[] b = chuoiCCCd.split(" ");
                        String ngaySinh = b[4].substring(0, 2) + "-" + b[4].substring(2, 4) + "-" + b[4].substring(4, 8);
                        txtTen.setText(b[1] + " " + b[2] + " " + b[3]);
                        txtDiaChi.setText(b[13] + " " + b[14]);
                        if (b[5].equalsIgnoreCase("Nam")) {
                            rdoNam.setSelected(true);
                        } else {
                            rdoNu.setSelected(true);
                        }
                        try {
                            Date date = new SimpleDateFormat("dd-MM-yyyy").parse(ngaySinh);
                            dpNgaySinh.setDate(date);
                        } catch (Exception e) {
                            e.printStackTrace(System.out);
                        }
                        JOptionPane.showMessageDialog(this, "Quét qr thành công");
                    } else {
                        chuoiCCCd = chuoiCCCd.replace("|", " ");
                        String[] chuoi = chuoiCCCd.split(" ");
                        String ngaySinh = chuoi[5].substring(0, 2) + "-" + chuoi[5].substring(2, 4) + "-" + chuoi[5].substring(4, 8);
                        txtTen.setText(chuoi[2] + " " + chuoi[3] + " " + chuoi[4]);
                        txtDiaChi.setText(chuoi[16] + " " + chuoi[17]);
                        if (chuoi[6].equalsIgnoreCase("Nam")) {
                            rdoNam.setSelected(true);
                        } else {
                            rdoNu.setSelected(true);
                        }
                        try {
                            Date date = new SimpleDateFormat("dd-MM-yyyy").parse(ngaySinh);
                            dpNgaySinh.setDate(date);
                        } catch (Exception e) {
                            e.printStackTrace(System.out);
                        }
                        JOptionPane.showMessageDialog(this, "Quét qr thành công");
                    }
                } catch (Exception e) {
                }
            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }

}
